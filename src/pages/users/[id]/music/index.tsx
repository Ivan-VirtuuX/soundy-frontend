import React from "react";

import { GetServerSideProps, NextPage } from "next";
import Head from "next/head";

import { MainLayout } from "@/layouts/MainLayout";

import { Api } from "@/api/index";
import { ITrack, IUser } from "@/api/types";

import { PageTitle } from "@/components/ui/PageTitle";
import { SearchInput } from "@/components/ui/SearchInput";
import { MusicPlayer } from "@/components/MusicPlayer";
import { NullResultsBlock } from "@/components/ui/NullResultsBlock";

import styles from "@/pages/music/Music.module.scss";

const Music: NextPage = ({
  userTracks,
  user,
}: {
  userTracks: ITrack[];
  user: IUser;
}) => {
  const [playlistTracks, setPlaylistTracks] =
    React.useState<ITrack[]>(userTracks);
  const [searchText, setSearchText] = React.useState("");

  return (
    <MainLayout fullWidth>
      <Head>
        <title>{"Музыка " + user?.name + " " + user?.surname}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicons/favicon.ico" />
      </Head>
      <main className={styles.container}>
        <PageTitle pageTitle={"Музыка " + user?.name + " " + user?.surname} />
        {userTracks.length !== 0 ? (
          <div className={styles.musicBlock}>
            <SearchInput
              placeholder="Введите название трека"
              width={600}
              handleChange={(text) => setSearchText(text)}
            />
            <MusicPlayer
              searchText={searchText}
              tracks={userTracks}
              playlistTracks={playlistTracks}
              handleChangeUserTracks={(track) =>
                setPlaylistTracks([...playlistTracks, track])
              }
              handleRemoveTrack={(track) =>
                setPlaylistTracks([
                  ...playlistTracks.filter(
                    (playlistTrack) => playlistTrack.id !== track.id
                  ),
                ])
              }
            />
          </div>
        ) : (
          <NullResultsBlock
            text="Список музыки пуст"
            style={{ marginTop: 20 }}
          />
        )}
      </main>
    </MainLayout>
  );
};

export default Music;

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  if (!ctx.req.cookies.authToken) {
    return {
      redirect: {
        destination: "/",
        permanent: false,
      },
    };
  }

  const user = await Api().user.getOne(ctx.params.id);

  return {
    props: { userTracks: user.playlist, user },
  };
};

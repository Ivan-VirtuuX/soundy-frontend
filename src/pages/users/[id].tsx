import { GetServerSideProps, NextPage } from "next";
import { MainLayout } from "@/layouts/MainLayout";
import Head from "next/head";
import React from "react";
import { IUser } from "@/api/types";
import { Api } from "@/api/index";
import { EmptyAvatar } from "@/components/UI/EmptyAvatar";
import styles from "./Users.module.scss";
import { FriendsList } from "@/components/FriendsList";
import { BlueButton } from "@/components/UI/BlueButton";
import { Line } from "@/components/UI/Line";
import { PageTitle } from "@/components/UI/PageTitle";

const Users: NextPage<IUser> = ({
  id,
  login,
  name,
  surname,
  avatarUrl,
  birthDate,
}) => {
  return (
    <MainLayout fullWidth>
      <Head>
        <title>{name + " " + surname}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicons/favicon.ico" />
      </Head>
      <main className={styles.container}>
        <div className={styles.head}>
          <div className={styles.headContent}>
            <div className={styles.headContentLeftSide}>
              {avatarUrl ? (
                <img className={styles.avatar} src={avatarUrl} alt="avatar" />
              ) : (
                <EmptyAvatar width={150} />
              )}
              <div className={styles.headContentUserInfo}>
                <div className={styles.userInfo}>
                  <div className={styles.nameSurnameBlock}>
                    <span className={styles.name}>{name}</span>
                    <span className={styles.surname}>{surname}</span>
                  </div>
                  <span className={styles.login}>{login}</span>
                </div>
                <div className={styles.birthDateBlock}>
                  <span className={styles.birthDateBlockTitle}>
                    Дата рождения
                  </span>
                  <span className={styles.birthDateBlockDate}>
                    {new Date(birthDate).toLocaleDateString("ru-Ru")}
                  </span>
                </div>
              </div>
            </div>
            <div className={styles.friendsBlock}>
              <div className={styles.friendsBlockHead}>
                <span className={styles.friendsBlockTitle}>Друзья</span>
                <span className={styles.friendsBlockFriendsCount}> 12</span>
              </div>
              <FriendsList />
            </div>
          </div>
          <div className={styles.profileActionsBlock}>
            <BlueButton size="sm" text="Редактировать">
              <svg
                width="15"
                height="15"
                viewBox="0 0 14 14"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M11.6882 5.01322L8.64066 2.00154L9.64455 0.997648C9.91943 0.722773 10.2572 0.585335 10.6578 0.585335C11.0584 0.585335 11.3959 0.722773 11.6703 0.997648L12.6742 2.00154C12.949 2.27642 13.0925 2.60818 13.1044 2.99683C13.1164 3.38548 12.9849 3.71701 12.71 3.9914L11.6882 5.01322ZM10.6484 6.0709L3.04754 13.6718H0V10.6243L7.60091 3.02336L10.6484 6.0709Z"
                  fill="white"
                />
              </svg>
            </BlueButton>
            <BlueButton size="sm" text="Сообщение">
              <svg
                width="15"
                height="15"
                viewBox="0 0 15 15"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M7.5 5.875V5.88313M4.25 5.875V5.88313M10.75 5.875V5.88313M1 14V3.4375C1 2.79103 1.25681 2.17105 1.71393 1.71393C2.17105 1.25681 2.79103 1 3.4375 1H11.5625C12.209 1 12.829 1.25681 13.2861 1.71393C13.7432 2.17105 14 2.79103 14 3.4375V8.3125C14 8.95897 13.7432 9.57895 13.2861 10.0361C12.829 10.4932 12.209 10.75 11.5625 10.75H4.25L1 14Z"
                  stroke="white"
                  strokeWidth="1.40541"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
              </svg>
            </BlueButton>
          </div>
          <Line />
        </div>
        <div className={styles.posts}>
          <PageTitle pageTitle="Посты" />
        </div>
      </main>
    </MainLayout>
  );
};

export default Users;

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  if (!ctx.req.cookies.authToken) {
    return {
      redirect: {
        destination: "/",
        permanent: false,
      },
    };
  } else {
    try {
      const user = await Api().user.getOne(ctx.params.id);

      return {
        props: { ...user },
      };
    } catch (err) {
      console.warn(err);
    }
  }
};
